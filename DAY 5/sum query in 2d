class NumMatrix:
    def __init__(self, matrix):
        rows = len(matrix)
        cols = len(matrix[0])
        self.prefixSumMatrix = [[0] * cols for _ in range(rows)]

        for i in range(rows):
            for j in range(cols):
                left = self.prefixSumMatrix[i][j - 1] if j > 0 else 0
                above = self.prefixSumMatrix[i - 1][j] if i > 0 else 0
                aboveLeft = self.prefixSumMatrix[i - 1][j - 1] if i > 0 and j > 0 else 0
                self.prefixSumMatrix[i][j] = matrix[i][j] + left + above - aboveLeft

    def sumRegion(self, row1, col1, row2, col2):
        total = self.prefixSumMatrix[row2][col2]
        above = self.prefixSumMatrix[row1 - 1][col2] if row1 > 0 else 0
        left = self.prefixSumMatrix[row2][col1 - 1] if col1 > 0 else 0
        aboveLeft = self.prefixSumMatrix[row1 - 1][col1 - 1] if row1 > 0 and col1 > 0 else 0

        return total - above - left + aboveLeft
